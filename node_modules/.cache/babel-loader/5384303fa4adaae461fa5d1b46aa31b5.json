{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nconst STORAGE_KEY = 'my-todo';\n\nfunction useStorage() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const data = localStorage.getItem(STORAGE_KEY);\n\n    if (!data) {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify([]));\n    } else {\n      setTasks(JSON.parse(data));\n    }\n  }, []);\n\n  const putTasks = items => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(items));\n    setTasks(items);\n  };\n\n  const clearTasks = () => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify([]));\n    setTasks([]);\n  };\n\n  return [tasks, putTasks, clearTasks];\n}\n\n_s(useStorage, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\nexport default useStorage;","map":{"version":3,"sources":["C:/Users/mmanh/todo-app/src/hooks/storage.js"],"names":["useState","useEffect","STORAGE_KEY","useStorage","tasks","setTasks","data","localStorage","getItem","setItem","JSON","stringify","parse","putTasks","items","clearTasks"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,MAAMC,WAAW,GAAG,SAApB;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBN,WAArB,CAAb;;AAEA,QAAI,CAACI,IAAL,EAAW;AACTC,MAAAA,YAAY,CAACE,OAAb,CAAqBP,WAArB,EAAkCQ,IAAI,CAACC,SAAL,CAAe,EAAf,CAAlC;AACD,KAFD,MAEO;AACLN,MAAAA,QAAQ,CAACK,IAAI,CAACE,KAAL,CAAWN,IAAX,CAAD,CAAR;AACD;AACF,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMO,QAAQ,GAAGC,KAAK,IAAI;AACxBP,IAAAA,YAAY,CAACE,OAAb,CAAqBP,WAArB,EAAkCQ,IAAI,CAACC,SAAL,CAAeG,KAAf,CAAlC;AACAT,IAAAA,QAAQ,CAACS,KAAD,CAAR;AACD,GAHD;;AAKA,QAAMC,UAAU,GAAG,MAAM;AACvBR,IAAAA,YAAY,CAACE,OAAb,CAAqBP,WAArB,EAAkCQ,IAAI,CAACC,SAAL,CAAe,EAAf,CAAlC;AACAN,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAHD;;AAKA,SAAO,CAACD,KAAD,EAAQS,QAAR,EAAkBE,UAAlB,CAAP;AACD;;GAxBQZ,U;;AA0BT,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst STORAGE_KEY = 'my-todo';\r\n\r\nfunction useStorage() {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(STORAGE_KEY);\r\n\r\n    if (!data) {\r\n      localStorage.setItem(STORAGE_KEY, JSON.stringify([]));\r\n    } else {\r\n      setTasks(JSON.parse(data));\r\n    }\r\n  }, []);\r\n\r\n  const putTasks = items => {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(items));\r\n    setTasks(items);\r\n  };\r\n\r\n  const clearTasks = () => {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify([]));\r\n    setTasks([]);\r\n  };\r\n\r\n  return [tasks, putTasks, clearTasks];\r\n}\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}
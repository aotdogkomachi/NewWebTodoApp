{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmanh\\\\todo-app\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TaskList from './TaskList';\nimport Input from './Input';\nimport Filter from './Filter';\nimport useStorage from '../hooks/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getKey = () => Math.random().toString(32).substring(2);\n\nfunction Todo() {\n  _s();\n\n  const [tasks, putTasks, clearTasks] = useStorage();\n  const [filter, setFilter] = useState('ALL');\n\n  const handleAdd = text => putTasks([...tasks, {\n    key: getKey(),\n    text,\n    done: false\n  }]);\n\n  const handleFilterChange = value => setFilter(value);\n\n  const handleCheck = checked => {\n    const newItems = tasks.map(item => {\n      if (item.key === checked.key) {\n        item.done = !item.done;\n      }\n\n      return item;\n    });\n    putTasks(newItems);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"atom\",\n        children: \"\\u269B\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), \" React ToDo\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      onAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      onChange: handleFilterChange,\n      value: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      items: tasks,\n      filter: filter,\n      onCheck: handleCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-block\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-light is-fullwidth\",\n        onClick: clearTasks,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"7wRgDgOHrxkvg0aLcxQJ5MiB33M=\", false, function () {\n  return [useStorage];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/mmanh/todo-app/src/components/Todo.js"],"names":["React","useState","TaskList","Input","Filter","useStorage","getKey","Math","random","toString","substring","Todo","tasks","putTasks","clearTasks","filter","setFilter","handleAdd","text","key","done","handleFilterChange","value","handleCheck","checked","newItems","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AAEA,MAAMC,MAAM,GAAG,MAAMC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAArB;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAlB,IAAgCT,UAAU,EAAhD;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMgB,SAAS,GAAGC,IAAI,IAAIL,QAAQ,CAChC,CAAC,GAAGD,KAAJ,EAAW;AAAEO,IAAAA,GAAG,EAAEb,MAAM,EAAb;AAAiBY,IAAAA,IAAjB;AAAuBE,IAAAA,IAAI,EAAE;AAA7B,GAAX,CADgC,CAAlC;;AAIA,QAAMC,kBAAkB,GAAGC,KAAK,IAAIN,SAAS,CAACM,KAAD,CAA7C;;AAEA,QAAMC,WAAW,GAAGC,OAAO,IAAI;AAC7B,UAAMC,QAAQ,GAAGb,KAAK,CAACc,GAAN,CAAUC,IAAI,IAAI;AACjC,UAAIA,IAAI,CAACR,GAAL,KAAaK,OAAO,CAACL,GAAzB,EAA8B;AAC5BQ,QAAAA,IAAI,CAACP,IAAL,GAAY,CAACO,IAAI,CAACP,IAAlB;AACD;;AACD,aAAOO,IAAP;AACD,KALgB,CAAjB;AAMAd,IAAAA,QAAQ,CAACY,QAAD,CAAR;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAM,QAAA,IAAI,EAAC,KAAX;AAAiB,sBAAW,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAER;AAAd;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEI,kBAAlB;AAAsC,MAAA,KAAK,EAAEN;AAA7C;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEH,KAAjB;AAAwB,MAAA,MAAM,EAAEG,MAAhC;AAAwC,MAAA,OAAO,EAAEQ;AAAjD;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,8BAAlB;AAAiD,QAAA,OAAO,EAAET,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAnCQH,I;UAC+BN,U;;;KAD/BM,I;AAqCT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport TaskList from './TaskList';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\nimport useStorage from '../hooks/storage';\r\n\r\nconst getKey = () => Math.random().toString(32).substring(2);\r\n\r\nfunction Todo() {\r\n  const [tasks, putTasks, clearTasks] = useStorage();\r\n  const [filter, setFilter] = useState('ALL');\r\n\r\n  const handleAdd = text => putTasks(\r\n    [...tasks, { key: getKey(), text, done: false }]\r\n  );\r\n\r\n  const handleFilterChange = value => setFilter(value);\r\n\r\n  const handleCheck = checked => {\r\n    const newItems = tasks.map(item => {\r\n      if (item.key === checked.key) {\r\n        item.done = !item.done;\r\n      }\r\n      return item;\r\n    });\r\n    putTasks(newItems);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"panel\">\r\n      <div className=\"panel-heading\">\r\n        <span role=\"img\" aria-label=\"atom\">⚛️</span> React ToDo\r\n      </div>\r\n      <Input onAdd={handleAdd} />\r\n      <Filter onChange={handleFilterChange} value={filter} />\r\n      <TaskList items={tasks} filter={filter} onCheck={handleCheck} />\r\n      <div className=\"panel-block\">\r\n        <button className=\"button is-light is-fullwidth\" onClick={clearTasks}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;"]},"metadata":{},"sourceType":"module"}